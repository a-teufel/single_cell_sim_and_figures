// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// pa
SEXP pa(NumericVector p, double MOI, double min_time, double max_time, int rep, int write);
RcppExport SEXP _spire_pa(SEXP pSEXP, SEXP MOISEXP, SEXP min_timeSEXP, SEXP max_timeSEXP, SEXP repSEXP, SEXP writeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type MOI(MOISEXP);
    Rcpp::traits::input_parameter< double >::type min_time(min_timeSEXP);
    Rcpp::traits::input_parameter< double >::type max_time(max_timeSEXP);
    Rcpp::traits::input_parameter< int >::type rep(repSEXP);
    Rcpp::traits::input_parameter< int >::type write(writeSEXP);
    rcpp_result_gen = Rcpp::wrap(pa(p, MOI, min_time, max_time, rep, write));
    return rcpp_result_gen;
END_RCPP
}
// avepa
NumericVector avepa(NumericVector p, double MOI, double min_time, double max_time, int write);
RcppExport SEXP _spire_avepa(SEXP pSEXP, SEXP MOISEXP, SEXP min_timeSEXP, SEXP max_timeSEXP, SEXP writeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type MOI(MOISEXP);
    Rcpp::traits::input_parameter< double >::type min_time(min_timeSEXP);
    Rcpp::traits::input_parameter< double >::type max_time(max_timeSEXP);
    Rcpp::traits::input_parameter< int >::type write(writeSEXP);
    rcpp_result_gen = Rcpp::wrap(avepa(p, MOI, min_time, max_time, write));
    return rcpp_result_gen;
END_RCPP
}
// sig
NumericVector sig(NumericMatrix p0);
RcppExport SEXP _spire_sig(SEXP p0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type p0(p0SEXP);
    rcpp_result_gen = Rcpp::wrap(sig(p0));
    return rcpp_result_gen;
END_RCPP
}
// track_mutants
SEXP track_mutants(NumericVector p, double MOI, double min_time, double max_time);
RcppExport SEXP _spire_track_mutants(SEXP pSEXP, SEXP MOISEXP, SEXP min_timeSEXP, SEXP max_timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type MOI(MOISEXP);
    Rcpp::traits::input_parameter< double >::type min_time(min_timeSEXP);
    Rcpp::traits::input_parameter< double >::type max_time(max_timeSEXP);
    rcpp_result_gen = Rcpp::wrap(track_mutants(p, MOI, min_time, max_time));
    return rcpp_result_gen;
END_RCPP
}
// avetrack
double avetrack(NumericVector p, double MOI, double min_time, double max_time);
RcppExport SEXP _spire_avetrack(SEXP pSEXP, SEXP MOISEXP, SEXP min_timeSEXP, SEXP max_timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type MOI(MOISEXP);
    Rcpp::traits::input_parameter< double >::type min_time(min_timeSEXP);
    Rcpp::traits::input_parameter< double >::type max_time(max_timeSEXP);
    rcpp_result_gen = Rcpp::wrap(avetrack(p, MOI, min_time, max_time));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_spire_pa", (DL_FUNC) &_spire_pa, 6},
    {"_spire_avepa", (DL_FUNC) &_spire_avepa, 5},
    {"_spire_sig", (DL_FUNC) &_spire_sig, 1},
    {"_spire_track_mutants", (DL_FUNC) &_spire_track_mutants, 4},
    {"_spire_avetrack", (DL_FUNC) &_spire_avetrack, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_spire(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
